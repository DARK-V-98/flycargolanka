
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper functions to check roles from Firestore
    // Safely handles unauthenticated requests
    function isDeveloper(userId) {
      return request.auth != null && get(/databases/(default)/documents/users/$(userId)).data.email == "thimira.vishwa2003@gmail.com";
    }

    function isAdmin(userId) {
      return request.auth != null && get(/databases/(default)/documents/users/$(userId)).data.role == 'admin';
    }

    // NIC Verification Images
    // Users can only write to their own folder.
    // Admins/Developers can read all verification images.
    match /nic_verification/{userId}/{fileName} {
      allow read: if request.auth != null && (isAdmin(request.auth.uid) || isDeveloper(request.auth.uid));
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Special Offer Images
    // Anyone can read the offer images for the homepage.
    // Only admins/devs can upload/delete them.
    match /special_offers/{fileName} {
        allow read: if true;
        allow write: if request.auth != null && (isAdmin(request.auth.uid) || isDeveloper(request.auth.uid));
    }

    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
