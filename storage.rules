rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Safely checks for admin/dev roles. MUST be called after isSignedIn().
    function isDeveloperOrAdmin() {
      // Developer has inherent role.
      if (request.auth.token.email == "thimira.vishwa2003@gmail.com") {
        return true;
      }
      // Check role from Firestore.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'developer'];
    }

    // --- NIC Verification Images ---
    // Path: /nic_verification/{userId}/{fileName}
    match /nic_verification/{userId}/{fileName} {
      // Allow read access only to the user who owns the files and to admins/developers.
      allow read: if isOwner(userId) || (isSignedIn() && isDeveloperOrAdmin());
      
      // Allow create/write access only to the user who owns the folder.
      allow write: if isOwner(userId);

      // Allow owner to delete their own NIC files (e.g., for resubmission).
      allow delete: if isOwner(userId);
    }

    // --- Default Deny ---
    // By default, deny all other read/write access to the bucket for security.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
