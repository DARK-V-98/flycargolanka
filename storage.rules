
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check for admin/developer role from Firestore
    function isRole(role) {
      // Must check for auth being non-null before accessing it.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAdmin() {
      return isRole('admin');
    }
    
    function isDeveloper() {
      return isRole('developer');
    }

    // Homepage promo image can be read by anyone, but only written by admins/developers
    match /homepage/{fileName} {
      allow read: if true;
      allow write, delete: if request.auth != null && (isAdmin() || isDeveloper());
    }

    // NIC verification images
    match /nic_verification/{userId}/{fileName} {
      // User can create/upload to their own folder
      allow create: if request.auth != null && request.auth.uid == userId;

      // User can read/delete their own images. Admins/devs can also read them.
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin() || isDeveloper());
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}
