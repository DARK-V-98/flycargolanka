
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ====== Helper Functions ======
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      // Caching the result of get() is handled by Firestore rules engine
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdminOrDev() {
      return isAuth() && (getUserData(request.auth.uid).role == 'admin' || getUserData(request.auth.uid).role == 'developer');
    }

    // ====== Collection Rules ======

    // User profiles
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read: if isOwner(userId) || isAdminOrDev();
      allow update: if 
        // A user can update their own profile data, but cannot change their own role.
        (isOwner(userId) && request.resource.data.role == resource.data.role) ||
        // An admin/dev can update a user's role or verification status.
        (isAdminOrDev() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role', 'nicVerificationStatus', 'updatedAt']));
      allow delete: if false; // Disallow user deletion from client
    }

    // Bookings
    match /bookings/{bookingId} {
      allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
      allow read: if isAdminOrDev() || (isAuth() && resource.data.userId == request.auth.uid);
      allow update: if 
        // User can cancel their own pending booking
        (isAuth() && resource.data.userId == request.auth.uid && resource.data.status == 'Pending' && request.resource.data.status == 'Cancelled' && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt'])) ||
        // Admins/devs can update specific status fields of any booking
        (isAdminOrDev() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'paymentStatus', 'updatedAt']));
      
      allow delete: if isAdminOrDev(); // Only admins can delete bookings
    }

    // Shipping rates (countries and weights)
    match /shipping_rates/{countryId} {
      // Authenticated users can read rates for calculator/booking
      allow read: if isAuth();
      // Only admins/devs can manage rates
      allow write: if isAdminOrDev();

      match /weights/{weightId} {
        // Authenticated users can read rates for calculator/booking
        allow read: if isAuth();
        // Only admins/devs can manage rates
        allow write: if isAdminOrDev();
      }
    }
    
    // Settings for the app, e.g., homepage image
    match /settings/{settingId} {
        // Anyone can read settings
        allow read: if true;
        // Only admins/devs can change settings
        allow write: if isAdminOrDev();
    }
    
    // Notifications for admins
    match /notifications/{notificationId} {
        // Any authenticated user can create a notification for admins
        allow create: if isAuth();
        // Only admins/devs can read, update (mark as read), or delete notifications
        allow read, update, delete: if isAdminOrDev();
    }
  }
}
